@model Web.ViewModels.UccountFilterViewModel
@{
    ViewData["Title"] = "Accounts";

    var tableId = Guid.NewGuid();

    var listUrl = Url.RouteUrl("GetUccounts");
    var deleteUrl = Url.RouteUrl("DeleteUccounts");
    var editUrl = Url.RouteUrl("EditUccount");
    var detailsUrl = Url.RouteUrl("DetailsUccount");
    var vendorCategoriesUrl = Url.Action("GetVendorCategories", "Vendor");
    var vendorCategoryUrl = Url.Action("GetVendorCategory", "Vendor");
    var vendorUrl = Url.Action("GetVendor", "Vendor");
}

@section RightSidebar {
    <div class="ui stacked secondary yellow segment">
        <form id="table-filter" class="ui form">
            <h3>Filters</h3>
            <div class="field">
                <label asp-for="Kind"></label>
                <select asp-for="Kind" asp-items="@Html.GetEnumSelectList<Core.Data.Enums.UccountTypes>()" class="ui dropdown">
                    <option value="" selected>Select account type</option>
                </select>
            </div>
            <div class="field">
                <label asp-for="VendorId"></label>
                <select asp-for="VendorId" asp-items="@ViewBag.Vendors" class="ui dropdown">
                    <option value="" selected>Select vendor</option>
                </select>
            </div>
            <div class="field">
                <label asp-for="CustomerId"></label>
                <select asp-for="CustomerId" asp-items="@ViewBag.Customers" data-clearable="true" class="ui dropdown">
                    <option value="" selected>Select customers</option>
                </select>
            </div>
        </form>
    </div>
}
<div class="ui shape full-width">
    <div class="sides">
        <div class="active side main">
            <div id="toolbar" class="flex justify-content-between">
                <div class="ui buttons">
                    <a class="ui button" asp-action="AddUccount" asp-route-kind="0" data-request="ajax" rel="dialog" data-title="Create business account">Bussines</a>
                    <div class="or"></div>
                    <a class="ui button" asp-action="AddUccount" asp-route-kind="1" data-request="ajax" rel="dialog" data-title="Create personal account">Personal</a>
                </div>

                <button class="red ui button" data-action="delete" disabled><i class="trash icon"></i> Delete</button>
            </div>
            <table id="@(tableId)" class="ui selectable celled unstackable orange table" data-toolbar="#toolbar"></table>
        </div>
        <div class="side details">
            <div class="ui grid">
                <div class="row">
                    <div class="column">
                        <button class="ui button" data-target=".side.main"><i class="retweet icon"></i> Back</button>
                    </div>
                </div>
                <div class="row">
                    <div class="column">
                        <div id="@(tableId)_details"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        function onServiceCreateClick (e, jqXHR, status) {
            if (status === 'success') {
                const data = jqXHR.responseJSON;
                if (data && data.fields) {
                    const { categoryId, name, fields } = data;
                    const $link = $(e.target);
                    const $target = $($link.data("target"));
                    const generatedFields = $.fn.generateFields(fields, "Services[][Fields]");
                    const generatedSegment = $.fn.generateSegment({ id: $.fn.uuidv4(), groupId: categoryId, name, html: generatedFields, srlzName: "Services" });
                    const $parentSegment = $(`div[id="${categoryId}_segments"]`);
                    const $form = $link.parents("form");

                    if (!$parentSegment.length) {
                        const generatedParentSegment = $.fn.generateSegments(categoryId, name, generatedSegment);
                        $target.append(generatedParentSegment);
                    } else {
                        $parentSegment.append(generatedSegment);
                    }

                    $form.trigger("serviceadd");
                }
            }
        }

        function onDeleteServiceClick(e, jqXHR, status) {
            if (status === 'success') {
                const $link = $(e.target);
                const data = $link.data();
                const $segment = $(data.target);
                const $segments = $(data.parent);
                const $vendorSelect = $(data.vendor);
                const numberOfChildrens = $segments.children().length;
                const $form = $link.parents("form");

                if (!numberOfChildrens || numberOfChildrens <= 2) {
                    $segments.remove();
                } else {
                    $segment.remove();
                }

                $form.trigger("servicedelete");
                window.DocumentController.reload(false);
            }
        }

        function generateMenuItemsFromCategories($target, id, servicesFieldsGuid, vendorsSelectGuid) {
            $.get("@vendorCategoriesUrl", { "id": id }).done(categories => {
                const $generatedMenuItems = categories.map(
                    category => $(
                        generateMenuItem(category, {
                            "data-request": "ajax",
                            "data-target": `#${servicesFieldsGuid}`,
                            "data-vendor": `#${vendorsSelectGuid}`,
                            rel: "onServiceCreateClick",
                            href: `@(vendorCategoryUrl)` + "?id=" + category.id
                        })
                    )
                );

                $target.html($generatedMenuItems);
                $target.find('a[data-request=ajax]').ajaxClick();
            });
        }

        function generateMenuItem (item, attrs) {
            return `<a id="${item.id}" class="item" ${$.fn.getAttributes(attrs)}>${item.name}</a>`
        }

        function initPartialLogic(options) {
            const { 
                $vendorsSelectContainer,
                $vendorFieldsContainer,
                $vendorsSelectParentContainer,
                $servicesFieldsContainer,
                $servicesMenuContainer,
                servicesFieldsGuid,
                vendorsSelectGuid,
                formGuid,
                edit
            } = options;

            if (edit) {
                $(`#${formGuid}`).on("serviceadd", function () {
                    console.log("Added");
                    if (!$vendorsSelectParentContainer.hasClass("disabled")) {
                        $vendorsSelectParentContainer.addClass("disabled");
                    }
                });

                $(`#${formGuid}`).on("servicedelete", function () {
                    console.log("Delete");
                    const childrenCount = $servicesFieldsContainer.children().length;

                    if (childrenCount < 1) {
                        if ($vendorsSelectParentContainer.hasClass("disabled")) {
                            $vendorsSelectParentContainer.removeClass("disabled");
                        }
                    }
                });
            }

            $vendorsSelectContainer.on("change", function () {
                const vendorId = $(this).val();

                if (!edit) {
                    $servicesFieldsContainer.html("");
                }

                $.get("@vendorUrl", { "id": vendorId }).done(vendorData => {
                    if (vendorData) {
                        const $fields = $($.fn.generateFields(vendorData.fields, "Fields", true));

                        $vendorFieldsContainer.html($fields);

                        generateMenuItemsFromCategories($servicesMenuContainer, vendorId, servicesFieldsGuid, vendorsSelectGuid);
                    }
                })
            });
        }

        function displayPasswordOnClick(e, jqXHR, status) {
            if (status === 'success') {
                $(e.target).text(jqXHR.responseText);
            }
        }

        ajaxSubmitComplete = function (e, jqXHR, status) {
            if (status === 'success') {
                window.DocumentController.reload(false);
                window.dialog.modal('hide');
            }
        };

        $(document).ready(function () {
            window.DocumentController = new DocumentController({
                'table': '#@tableId',
                'controller': {
                    'list': '@listUrl',
                    'delete': '@deleteUrl'
                },
                'columns': [
                    { 'title': '', 'data': 'id', 'className': 'collapsing', 'render': (data, type, row) => $.fn.renderDatatableAction(data, type, row) },
                    { 'title': 'Vendor', 'className': 'collapsing', 'data': 'vendorName' },
                    { 'title': 'Customer', 'data': 'name', 'render': (data, type, row) => { return `<span>${data}<br/>${row.kind}</span>` } },
                    { 'title': 'Modified', 'className': 'collapsing', 'data': 'updatedDate', 'render': (data, type, row) => $.fn.formatDate(data, type, row) },
                    { 'title': 'Services', 'className': 'collapsing', 'data': 'serviceCount' },
                    {
                      'title': 'Action', 'data': 'id', 'className': 'collapsing', 'render': (data, type, row) => {
                        return `<a class='ui icon' data-request='ajax' href='@(editUrl)?id=${data}' rel='dialog' data-title='Edit Account'>
                                  <i class="pencil icon"></i>
                                </a>`;
                        }
                    }
                ],
                'onRowCreated': function (row, data, index) {
                    $(row).addClass(data.isActive ? 'grey' : '');
                },
                'onRowClick': (e, data) => { },
                'onDblRowClick': (e, data) => {
                   $.get('@detailsUrl', { 'id': data.id }).done(result => {
                       $('#@(tableId)_details').html(result).find('a[data-request=ajax]').ajaxClick();
                       $('.shape').shape('set next side', '.side.details').shape('flip over');
                    });
                }
            });
        })
    </script>
}
