@model Web.ViewModels.UccountViewModel
@{

    var formGuid = Guid.NewGuid();
    var vendorContainerFieldsGuid = Guid.NewGuid();
    var vendorContainerCategoryGuid = Guid.NewGuid();

    var persons = (List<SelectListItem>)ViewData["Persons"];
    var companies = (List<SelectListItem>)ViewData["Companies"];
    var vendors = (List<SelectListItem>)ViewData["Vendors"];
    var categories = (List<VendorCategoryViewModel>)ViewData["Categories"];
    var services = (List<UccountGroupedServiceViewModel>)ViewData["Services"];
    var uccountKind = (int)ViewData["Kind"];
}

<form id="@formGuid" class="ui form" asp-route="UpdateUccount" asp-route-id="@Model.Id" method="put" data-request="ajax">
    <fieldset>
        <input type="hidden" name="Id" value="@Model.Id" />
        <input type="hidden" name="Kind" value="@((int)uccountKind)" />

        <div class="two fields">
            @if(Model.Kind == Core.Data.Enums.UccountTypes.BUSINESS) {
                <div class="field required">
                    <label asp-for="CompanyId"></label>
                    <select class="ui search dropdown" required selected="false" asp-for="CompanyId" asp-items="@companies">
                        <option value="" selected disabled hidden></option>
                    </select>
                </div>
            } else {
                <div class="field required">
                    <label asp-for="PersonId"></label>
                    <select class="ui search dropdown" required asp-for="PersonId" asp-items="@persons">
                        <option value="" selected disabled hidden></option>
                    </select>
                </div>
            }

            <div class="field required @(Model.Services.Count() > 0 ? "disabled" : "")">
                <label asp-for="VendorId"></label>
                <select data-target="#@vendorContainerFieldsGuid" data-category="#@vendorContainerCategoryGuid" class="ui search dropdown" required asp-for="VendorId" asp-items="@vendors">
                    <option value="" selected disabled hidden></option>
                </select>
            </div>
        </div>

        <div class="field">
            <div class="ui slider checkbox">
                <input type="checkbox" name="IsActive" data-value-type="boolean" value="true" @(Model.IsActive ? "checked" : "") />
                <label asp-for="IsActive"></label>
            </div>
        </div>

        <div id="@vendorContainerFieldsGuid" class="fields">
            @foreach(var Field in Model.Fields) {
                var inputType = Field.HTMLTypeName;
                var inputIsRequired = Field.IsRequired ? "required" : "";
                var inputValue = string.IsNullOrEmpty(Field.Value) && (Field.HTMLTypeName == "checkbox") ? "1" : Field.Value;
                var inputChecked = Field.HTMLTypeName == "checkbox" && Field.Value == "1" ? "checked" : "";

            <div class="field">
                <label>@Field.Name</label>
                <input type="hidden" name="Fields[][Name]" value="@Field.Name">
                <input type="hidden" name="Fields[][IsRequired]" value="@Field.IsRequired" data-value-type="boolean">
                <input type="hidden" name="Fields[][Type]" value="@((int)Field.Type)" data-value-type="number">
                <input type="hidden" name="Fields[][TypeName]" value="@Field.TypeName">
                <input type="@inputType" name="Fields[][Value]" value="@inputValue" autocomplete="new-password" placeholder="@Field.Name" @inputIsRequired @inputChecked data-value-type="string" />
            </div>
            }
        </div>

        <div class="ui right floated dropdown mini icon button" tabindex="0">
            <i class="plus icon"></i>
            <div id="@vendorContainerCategoryGuid" class="left menu">
                @foreach(var category in categories) {
                    <a id="@category.Id" class="item" asp-route="GetVendorCategory" asp-route-id="@category.Id" data-request="ajax" rel="onCreateServiceClick" data-target="#servicesContainer" >
                        @category.Name
                    </a>
                }
            </div>
        </div>

        <h4 class="ui dividing header">Services</h4>
        <div id="servicesContainer">
            @foreach(var service in services) {
                <div class="ui orange segment" data-group="@service.CategoryId">
                    <h4 class="ui header" data-label="@service.Name">@service.Name</h4>
                    @foreach(var group in service.Groups) {
                        <div id="@group.Id" class="equal width fields">
                            <input type="hidden" name="Services[][Id]" value="@group.ServiceId" data-value-type="string">
                            <input type="hidden" name="Services[][Name]" value="@group.ServiceName" data-value-type="string">
                            <input type="hidden" name="Services[][CategoryId]" value="@service.CategoryId" data-value-type="string">
                            @foreach(var Field in group.Fields) {
                                var inputType = Field.HTMLTypeName;
                                var inputIsRequired = Field.IsRequired ? "required" : "";
                                var inputValue = string.IsNullOrEmpty(Field.Value) && (Field.HTMLTypeName == "checkbox") ? "1" : Field.Value;
                                var inputChecked = Field.HTMLTypeName == "checkbox" && Field.Value == "1" ? "checked" : "";
                                
                                <div class="field">
                                    <input type="hidden" name="Services[][Fields][][Name]" value="@Field.Name">
                                    <input type="hidden" name="Services[][Fields][][IsRequired]" value="@Field.IsRequired" data-value-type="boolean">
                                    <input type="hidden" name="Services[][Fields][][Type]" value="@((int)Field.Type)" data-value-type="number">
                                    <input type="hidden" name="Services[][Fields][][TypeName]" value="@Field.TypeName">
                                    <input type="@inputType" name="Services[][Fields][][Value]" value="@inputValue" autocomplete="new-password" placeholder="@Field.Name" @inputIsRequired @inputChecked data-value-type="string" />
                                </div>
                            }
                            <div class="one wide field">
                                <a asp-route="DeleteService" asp-route-id="@group.ServiceId" data-request="ajax" rel="onDeleteServiceClick" onclick="return confirm('Are you sure want to delete this?')">delete</a>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </fieldset>
</form>