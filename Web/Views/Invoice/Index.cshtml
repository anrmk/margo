@model Web.ViewModels.InvoiceFilterViewModel

@{
    ViewData["Title"] = "Invoices";

    var tableId = Guid.NewGuid();

    var listUrl = Url.RouteUrl("GetInvoices");
    var deleteUrl = Url.RouteUrl("DeleteInvoices");
    var editUrl = Url.RouteUrl("EditInvoice");
    var detailsUrl = Url.RouteUrl("DetailsInvoice");

    var serviceListUrl = Url.RouteUrl("GetInvoiceServices");
    var serviceCreateUrl = Url.RouteUrl("AddInvoiceService");
}

@section RightSidebar {
    <div class="ui stacked secondary yellow segment">
        <form id="table-filter" class="ui form">
            <h3>Filters</h3>
            <div class="field">
                <div class="ui slider checkbox">
                    <input type="checkbox" name="Unpaid" data-value-type="boolean" value="true" />
                    <label asp-for="Unpaid"></label>
                </div>
            </div>
            <div class="field">
                <label asp-for="VendorId"></label>
                <select asp-for="VendorId" asp-items="@ViewBag.Vendors" class="ui dropdown search">
                    <option value="" selected>Select vendor</option>
                </select>
            </div>
            <div class="field">
                <label asp-for="Kind"></label>
                <select asp-for="Kind" asp-items="@Html.GetEnumSelectList<Core.Data.Enums.UccountTypes>()" class="ui dropdown">
                    <option value="" selected>Select account type</option>
                </select>
            </div>
            <div class="field">
                <label asp-for="CustomerId"></label>
                <select asp-for="CustomerId" asp-items="@ViewBag.Customers" data-clearable="true" class="ui dropdown search">
                    <option value="" selected>Select customers</option>
                </select>
            </div>
        </form>
    </div>
}

<div class="ui shape width-100">
    <div class="sides">
        <div class="active side main">
            @if(User.IsInRole("Administrator")) {
                <div id="toolbar" class="ui secondary menu">
                    <a asp-route="AddInvoice" class="ui button" data-request="ajax" rel="dialog" data-title="Create invoice"><i class="fa fa-plus mr-1"></i> Create</a>
                    <a asp-route="SyncInvoice" class="ui button" data-request="ajax" data-title="Sync invoice"><i class="fa fa-plus mr-1"></i> Sync</a>
                    <div class="right menu">
                        <button class="red ui button" data-action="delete" disabled><i class="trash icon"></i> Delete</button>
                    </div>
                </div>
            }
            <table id="@(tableId)" class="ui selectable celled unstackable orange table" data-toolbar="#toolbar"></table>
        </div>
        <div class="side display">
            <div class="ui grid">
                <div class="row">
                    <div class="column">
                        <button class="ui button" data-target=".side.main"><i class="retweet icon"></i> Back</button>
                    </div>
                </div>
                <div class="row">
                    <div class="column">
                        <div id="@(tableId)_details"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            window.DocumentController = new DocumentController({
                'table': '#@tableId',
                'controller': {
                    'list': '@listUrl',
                    'delete': '@deleteUrl'
                },
                'columns': [
                    { 'title': '', 'data': 'id', 'className': 'collapsing', 'render': (data, type, row) => $.fn.renderDatatableAction(data, type, row) },
                    { 'title': 'No ', 'className': 'collapsing', 'data': 'no' },
                    { 'title': 'Customer name', 'data': 'customerName' },
                    { 'title': 'Date', 'className': 'collapsing', 'data': 'date', 'render': (data, type, row) => $.fn.formatDate(data, type, row) },
                    { 'title': 'Due date', 'className': 'collapsing', 'data': 'dueDate', 'render': (data, type, row) => $.fn.formatDate(data, type, row) },
                    { 'title': 'Amount', 'className': 'collapsing', 'data': 'amount' },
                    { 'title': 'Balance', 'className': 'collapsing', 'data': 'balanceAmount' },
                    { 'title': 'Status', 'className': 'collapsing', 'data': 'status' },
                    { 'title': 'Payment date', 'className': 'collapsing', 'data': 'paymentDate', 'render': (data, type, row) => $.fn.formatDate(data, type, row) },
                    { 'title': 'Modified', 'className': 'collapsing', 'data': 'updatedDate', 'render': (data, type, row) => $.fn.formatDate(data, type, row) },
                    {
                      'title': 'Action', 'data': 'id', 'className': 'collapsing right aligned', 'render': (data, type, row) => {
                        return `<a class='ui icon' data-request='ajax' href='@(editUrl)?id=${data}' rel='dialog' data-title='Edit invoice' >
                                    <i class='pencil icon'></i>
                                </a>`;
                      }
                    }
                ],
                'onDblRowClick': (e, data) => {
                    if (e.target.tagName === 'TD') {
                        $.get('@detailsUrl', { 'id': data.id }).done(result => {
                            $('#@(tableId)_details').html(result).find("a[data-request=ajax]").ajaxClick();;
                            $('.shape').shape('set next side', '.side.display').shape('flip over');
                        });
                    }
                }
            });
        });

        //submit on create or update
        ajaxSubmitComplete = function (e, jqXHR, status) {
            if (status === 'success') {
                window.DocumentController.reload(false);
                window.dialog.modal('hide');
            }
        };

        //on Account select change
        onAccountSelectChange = function (e, jqXHR, status) {
            if (status === 'success') {
                var $form = $(e.currentTarget).closest('form');
                var data = jqXHR.responseJSON;
                var items = data.map(x => `<a class='item' href='@(serviceCreateUrl)?sguid=${x.id}' data-request='ajax' rel='onCreateInvoiceServiceClick' data-target='#${$form.attr('id')}_serviceContainer'>${x.name}<a/>`);

                let $container = $(e.currentTarget.getAttribute('data-target'));
                $container.empty().append(items).find('a[data-request=ajax]').ajaxClick();
            }
        }

        //create services
        onCreateInvoiceServiceClick = function (e, jqXHR, status) {
            if (status === 'success') {
                const container = $(e.target).data('target');
                $(container).append(jqXHR.responseText).find('a[data-request=ajax]').ajaxClick();
            }
        }

        //delete services
        onDeleteInvoiceServiceClick = function (e, jqXHR, status) {
            if (status === 'success') {
                const $parent = $(e.target).closest('.fields');
                $parent.remove()
            }
        }
    </script>
}
